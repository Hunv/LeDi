@page "/devicepages"
@page "/devicepages/{SelectedDeviceId}"
@using LeDi.Shared2.DatabaseModel;
@using LeDi.Shared2.Enum
@using Microsoft.AspNetCore.Authorization;
@using Microsoft.AspNetCore.Identity;
@inject UserManager<IdentityUser> _UserManager
@inject RoleManager<IdentityRole> _RoleManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject Microsoft.Extensions.Localization.IStringLocalizer<DevicePages> Localizer

<PageTitle>LeDi - @Localizer["PageTitle"]</PageTitle>

@if (DeviceList == null)
{
    <p><em>@Localizer["Loading"]</em></p>
}
else
{
    <AuthorizeView Roles="Att-CanDeviceManage,Att-IsAdmin">
        <Authorized>
            <p>@Localizer["SelectDevice"]</p>
            <div class="container-fluid">
                <div class="row align-items-start" style="height:20vh; min-height:20vh;">
                    @foreach(var aDevice in DeviceList) {
                        <div class="col-4 p-0 m-0" style="height:100%; min-height:100%;">
                            <div style="height:100%; min-height:100%;" class="p-1">
                                <a class="btn @(SelectedDeviceId == aDevice.DeviceId ? "btn-primary" : "btn-secondary") fs-4" style="display:block; width:100%; min-height:100%; display:flex; align-items:center; justify-content:center;" href="devicepages/@aDevice.DeviceId" role="button"><span class="oi oi-dashboard" aria-hidden="true" /> @aDevice.DeviceName<br /><br /><i>@aDevice.DeviceId</i></a>
                            </div>
                        </div>
                    }
                </div>
            </div>


            @*
            <InputSelect class="form-control" @bind-Value="SelectedDevice">
                @foreach(var aDevice in DeviceList)
                {
                    var dev = aDevice;
                    <option value="@dev.DeviceId">@dev.DeviceName</option>
                }    
            </InputSelect>*@
            <br /><br />

            <p>@Localizer["SelectEffect"]</p>
            @*<Tabs 
                @ref="EffectTabs" 
                NavStyle="NavStyle.Pills"
                OnShown="@(args => OnTabShownAsync(args))"
                >
                <Tab Title="@Localizer["EffectText"]" IsActive="true">
                    <Content>
                        <p>@Localizer["EffectTextInfo"]</p>
                        <InputTextArea class="form-control" @bind-Value="EffectTextContent" />
                    </Content>
                </Tab>
                <Tab Title="@Localizer["EffectMatch"]">
                    <Content>
                        <p class="mt-3">Selet the match that should be shown on the display</p>
                    </Content>
                </Tab>
                <Tab Title="@Localizer["EffectTournament"]">
                    <Content>
                        <p class="mt-3">Select the tournament that should be shown on the display</p>
                    </Content>
                </Tab>
                <Tab Title="@Localizer["EffectCountdown"]">
                    <Content>
                        <p>@Localizer["EffectCountdownInfo"]</p>

                        <p>@Localizer["EffectCountdownText"]</p>
                        <InputText class="form-control" @bind-Value="EffectCountdownText" />

                        <p>@Localizer["EffectCountdownSeconds"]</p>
                        <input type="number"
                               class="form-control"
                               placeholder="@Localizer["Seconds"]"
                               min="0"
                               max="99999"
                           @bind-value="EffectCountdownSeconds" />
                        <p class="mt-3">Countdown options (i.e. seconds to a specific time or total seconds to count down.)</p>
                    </Content>
                </Tab>
            </Tabs>*@

            <br />

            <Button Color="Color.Primary" @onclick="SetEffect"> @Localizer["SetEffect"] </Button>


        </Authorized>
        <NotAuthorized>
            <p>@Localizer["NoPermissions"]</p>
        </NotAuthorized>
    </AuthorizeView>
}

@code {
}
