@page "/match/{Id:int}"
@using LeDi.Server2.DatabaseModel;
@using LeDi.Server2.Enum
@using LeDi.Server2.Components
@using Microsoft.AspNetCore.Authorization;
@using Microsoft.AspNetCore.Identity;
@inject UserManager<IdentityUser> _UserManager
@inject RoleManager<IdentityRole> _RoleManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager
@inject Microsoft.Extensions.Localization.IStringLocalizer<MatchEdit> Localizer

<PageTitle>LeDi - Edit Match</PageTitle>

@if (Match == null)
{
    <p><em>@Localizer["Loading"]</em></p>
}
else
{
    <AuthorizeView Roles="Att-CanMatchEdit,Att-IsAdmin">
        <Authorized>
            <EditForm Model="@Match" OnValidSubmit="@SaveMatch" Context="x">
                <DataAnnotationsValidator />
                <ValidationSummary />
        
                <div hidden="@(!FieldList[Match.GameName ?? ""].Contains("txtTeamName1"))">
                    <a>@Localizer["Team1Name"]</a>
                    <InputText id="txtTeam1Name" type="text" class="form-control" placeholder="Teamname" @bind-Value="Match.Team1Name" />
                    <ValidationMessage For="@(() => Match.Team1Name)" />
                    <br />
                </div>

                <div hidden="@(!FieldList[Match.GameName ?? ""].Contains("txtTeamName2"))" >
                    <a>@Localizer["Team2Name"]</a>
                    <InputText id="txtTeam2Name" type="text" class="form-control" placeholder="Teamname" @bind-Value="Match.Team2Name" />
                    <ValidationMessage For="@(() => Match.Team2Name)" />
                    <br />
                </div>

                <div hidden="@(!FieldList[Match.GameName ?? ""].Contains("txtPeriodCount"))">
                    <a>@Localizer["PeriodsCount"]</a>
                    <InputNumber id="txtPeriodCount" class="form-control" type="text" @bind-Value="Match.RulePeriodCount" />
                    <br />
                </div>
   
                <div hidden="@(!FieldList[Match.GameName ?? ""].Contains("dtScheduledTime"))">
                    <a>@Localizer["ScheduledStartTime"]</a>
                    @*<input id="txtScheduledTime" class="form-control" width="150" type="time" @bind="Match.ScheduledTime" />*@        
                    <input id="txtScheduledTime" type="datetime" class="form-control" @bind-value="Match.ScheduledTime"/>
                    <br />
                </div>
                
                <div hidden="@(!FieldList[Match.GameName ?? ""].Contains("cmbMatchStatus"))">
                    <a>@Localizer["MatchStatus"]</a>
                    <InputSelect @bind-Value="MatchStatus" id="cmbMatchStatus" class="form-control" width="150">
                        @foreach (var value in Enum.GetValues(typeof(MatchStatusEnum)))
                        {
                            <option>@value</option>
                        }
                    </InputSelect>
                </div>        
                
                <div hidden="@(!FieldList[Match.GameName ?? ""].Contains("chkPeriodOvertime"))">
                    <InputCheckbox 
                        id="chkPeriodOvertime" 
                        @bind-Value="Match.RulePeriodOvertime" 
                        />
                    <a>@Localizer["MatchOvertime"]</a>
                    <br />
                </div>

                <div hidden="@(!FieldList[Match.GameName ?? ""].Contains("chkPeriodPauseNearEnd"))">
                    <InputCheckbox 
                        id="chkPeriodPauseNearEnd" 
                        @bind-Value="Match.RulePeriodLastPauseTimeOnEvent" 
                        />
                    <a>@Localizer["MatchPauses"]</a>
                    <br />
                </div>

                <div hidden="@(!FieldList[Match.GameName ?? ""].Contains("txtPeriodPauseNearEndSec")|| Match.RulePeriodLastPauseTimeOnEvent == false)">
                    <a>@Localizer["NumberOfSeconds"]</a>
                    <InputNumber 
                        id="txtPeriodPauseNearEndSec" 
                        class="form-control" 
                        type="text" 
                        @bind-Value="@Match.RulePeriodLastPauseTimeOnEventSeconds"
                        />
                    <br /> 
                </div>

                <div hidden="@(!FieldList[Match.GameName ?? ""].Contains("chkMatchExtensionOnDraw"))">
                    <InputCheckbox 
                        id="chkMatchExtensionOnDraw" 
                        @bind-Value="Match.RuleMatchExtensionOnDraw" 
                        />
                    <a>@Localizer["ExtendMatch"]</a>
                    <br />
                </div>
        
                @if (DisplayList != null && DisplayList.Count > 0)
                {
                    <div hidden="@(!FieldList[Match.GameName ?? ""].Contains("displaylist"))">
                        <br />
                        <a>@Localizer["ShowOnDisplay"]</a>
                        <br />
                        @foreach (var aDisplay in DisplayList)
                        {
                            var value = aDisplay;
                            <input type="checkbox" checked="@aDisplay.Enabled" @onchange="eventArgs => {DisplayClicked(value,(bool)(eventArgs.Value ?? false));}"> @aDisplay.DeviceName
                        }  
                        <br /><br />
                    </div>
                }
                <br />


                <div class="panel">
                    <button class="btn btn-secondary" type="button" @onclick="e => this.EditCollapsed = !this.EditCollapsed">
                        <span class="oi @(this.EditCollapsed ? "oi-arrow-circle-bottom" : "oi-arrow-circle-top")" /> @(this.EditCollapsed ? "Show live match properties" : "Hide live match properties")
                    </button>

                    <div class="panel @(EditCollapsed?"collapse":"")">
                
                        <div hidden="@(!FieldList[Match.GameName ?? ""].Contains("txtScoreTeam1"))">
                            <a>@Localizer["Team1Score"]</a>
                            <InputNumber id="txtScoreTeam1" class="form-control" type="text" @bind-Value="Match.Team1Score" />
                            <br />
                        </div>

                
                        <div hidden="@(!FieldList[Match.GameName ?? ""].Contains("txtScoreTeam2"))">
                            <a>@Localizer["Team2Score"]</a>
                            <InputNumber id="txtScoreTeam2" class="form-control" type="text" @bind-Value="Match.Team2Score" />
                            <br />  
                        </div>

                
                        <div hidden="@(!FieldList[Match.GameName ?? ""].Contains("txtTimeLeft"))">
                            <label>@Localizer["TimeLeft"]</label>
                            <div class="input-group">
                                <input type="number" class="form-control" style="max-width:100px; min-width:50px" placeholder="Minutes" min="0" max="99999" @bind-value="TimeLeftMinutesProxy"/>
                                <span class="input-group-addon mt-1" style="top:0px;">&nbsp;:&nbsp;</span>
                                <input type="number" class="form-control" style="max-width:100px; min-width:50px" placeholder="Seconds" min="0" max="59" @bind-value="TimeLeftSecondsProxy"/>
                            </div>
                            <br /> 
                        </div>

                
                        <div hidden="@(!FieldList[Match.GameName ?? ""].Contains("txtPeriodCount"))">
                            <a>@Localizer["CurrentPeriod"]</a>
                            <InputNumber id="txtPeriodCurrent" class="form-control" type="text" @bind-Value="Match.CurrentPeriod" />
                            <br />
                        </div>
                    </div>
                </div>
                <br />
                <button class="btn btn-primary" type="submit">Save Match</button>
                <a class="btn btn-danger" href="matchplanning" role="button">Cancel</a>
            </EditForm>
        </Authorized>
        <NotAuthorized>
            <p>@Localizer["NoPermissions"]</p>
        </NotAuthorized>
    </AuthorizeView>
}