<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddRole" xml:space="preserve">
    <value>Add Role</value>
  </data>
  <data name="CanDeviceCommands" xml:space="preserve">
    <value>Can run device commands</value>
  </data>
  <data name="CanDeviceManage" xml:space="preserve">
    <value>Can manage devices</value>
  </data>
  <data name="CanMatchAdd" xml:space="preserve">
    <value>Can create new matches</value>
  </data>
  <data name="CanMatchAvancedControls" xml:space="preserve">
    <value>Can use the advanced controls for an ongoing match</value>
  </data>
  <data name="CanMatchDelete" xml:space="preserve">
    <value>Can delete matches</value>
  </data>
  <data name="CanMatchEdit" xml:space="preserve">
    <value>Can edit matches</value>
  </data>
  <data name="CanMatchEnd" xml:space="preserve">
    <value>Can end matches</value>
  </data>
  <data name="CanMatchPenalty" xml:space="preserve">
    <value>Can impose penalties</value>
  </data>
  <data name="CanMatchStart" xml:space="preserve">
    <value>Can start matches</value>
  </data>
  <data name="CanMatchStop" xml:space="preserve">
    <value>Can pause/stop matches</value>
  </data>
  <data name="CanPlayerAdd" xml:space="preserve">
    <value>Can add new players</value>
  </data>
  <data name="CanPlayerDelete" xml:space="preserve">
    <value>Can delete players</value>
  </data>
  <data name="CanPlayerEdit" xml:space="preserve">
    <value>Can edit players</value>
  </data>
  <data name="CanRoleAdd" xml:space="preserve">
    <value>Can add new roles</value>
  </data>
  <data name="CanRoleDelete" xml:space="preserve">
    <value>Can delete roles</value>
  </data>
  <data name="CanRoleEdit" xml:space="preserve">
    <value>Can edit existing roles</value>
  </data>
  <data name="CanSettingManage" xml:space="preserve">
    <value>Can manage settings</value>
  </data>
  <data name="CanTeamAdd" xml:space="preserve">
    <value>Can add a new team</value>
  </data>
  <data name="CanTeamDelete" xml:space="preserve">
    <value>Can delete a team</value>
  </data>
  <data name="CanTeamEdit" xml:space="preserve">
    <value>Can edit an existing team</value>
  </data>
  <data name="CanTemplateManage" xml:space="preserve">
    <value>Can manage templates</value>
  </data>
  <data name="CanTournamentAdd" xml:space="preserve">
    <value>Can create new tournaments</value>
  </data>
  <data name="CanTournamentEdit" xml:space="preserve">
    <value>Can edit existing tournaments</value>
  </data>
  <data name="CanTournamentMatchAdd" xml:space="preserve">
    <value>Can add matches to tournaments</value>
  </data>
  <data name="CanTournamentMatchDelete" xml:space="preserve">
    <value>Can delete matches from tournaments</value>
  </data>
  <data name="CanTournamentMatchEdit" xml:space="preserve">
    <value>Can edit matches from tournaments</value>
  </data>
  <data name="CanUserAdd" xml:space="preserve">
    <value>Can add new users</value>
  </data>
  <data name="CanUserDelete" xml:space="preserve">
    <value>Can delete users</value>
  </data>
  <data name="CanUserEdit" xml:space="preserve">
    <value>Can edit users</value>
  </data>
  <data name="CanUserPasswordEdit" xml:space="preserve">
    <value>Can edit/reset passwords for users</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="IsAdmin" xml:space="preserve">
    <value>Is this an admin role?</value>
  </data>
  <data name="Loading" xml:space="preserve">
    <value>Loading...</value>
  </data>
  <data name="NoPermissions" xml:space="preserve">
    <value>You do not have the permission to view this page.</value>
  </data>
  <data name="NotLoggedIn" xml:space="preserve">
    <value>You're not loggged in.</value>
  </data>
  <data name="RoleName" xml:space="preserve">
    <value>Rolename</value>
  </data>
  <data name="UserRoles" xml:space="preserve">
    <value>Userroles</value>
  </data>
</root>