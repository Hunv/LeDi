@page "/matchplanning"
@using LeDi.Shared.DtoModel
@inject LeDi.Shared.Api Api

<PageTitle>LeDi - Match Planning</PageTitle>


@if (MatchList == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <h1>Aktuell geplante Spiele:</h1>
    <a href="/matchadd">Add new Match</a>

    <table class="table">
        <thead>
            <tr>
                <th>Team1</th>
                <th>Team2</th>
                <th>Score</th>
                <th>Scheduled Time</th>
                <th>Status</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var match in MatchList.Where(x => x.ScheduledTime >= DateTime.Now.Subtract(new TimeSpan(1, 0, 0))))
            {
                <tr>
                    <td>
                        @match.Team1Name
                    </td>
                    <td>
                        @match.Team2Name
                    </td>
                    <td>@match.Team1Score:@match.Team2Score</td>
                    <td>@match.ScheduledTime</td>
                    <td>@(Enum.GetName(typeof(LeDi.Shared.Enum.MatchStatusEnum), (match.MatchStatus.HasValue ? match.MatchStatus.Value : 0)))</td>
                    <td><a href="/match/@match.Id">Edit</a></td>
                </tr>
            }
        </tbody>
    </table>

    <br /><br /><br />
    <h1>Alte Spiele:</h1>

    <table class="table">
        <thead>
            <tr>
                <th>Team1</th>
                <th>Team2</th>
                <th>Score</th>
                <th>Scheduled Time</th>
                <th>Status</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var match in MatchList.Where(x => x.ScheduledTime < DateTime.Now.Subtract(new TimeSpan(1, 0, 0)) || x.ScheduledTime == null))
            {
                <tr>
                    <td>
                        @match.Team1Name
                    </td>
                    <td>
                        @match.Team2Name
                    </td>
                    <td>@match.Team1Score:@match.Team2Score</td>
                    <td>@match.ScheduledTime</td>
                    <td>@(Enum.GetName(typeof(LeDi.Shared.Enum.MatchStatusEnum), (match.MatchStatus.HasValue ? match.MatchStatus.Value : 0)))</td>
                    <td><a href="/match/@match.Id">Edit</a></td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private readonly NLog.Logger Logger = NLog.LogManager.GetCurrentClassLogger();
    private List<DtoMatch> MatchList = new List<DtoMatch>();

    protected override async Task OnInitializedAsync()
    {
        MatchList = await Api.GetMatchListAsync();
        
        await InvokeAsync(() => { StateHasChanged(); });
    }

    private string SecondsToTime(int seconds)
    {
        return ((seconds / 60).ToString("D2") + ":" + (seconds % 60).ToString("D2"));
    }
}
