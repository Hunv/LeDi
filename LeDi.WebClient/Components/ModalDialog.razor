@*https://www.claudiobernasconi.ch/2021/03/26/blazor-modal-dialog-component/*@
<div class="modal fade show" id="myModal" style="display:block; background-color: rgba(10,10,10,.8);" aria-modal="true" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">@Title</h4>
                <button type="button" class="btn btn-close" @onclick="@ModalCancel"></button>
            </div>
            <div class="modal-body">
                <p>@Text</p>
            </div>
            <div class="modal-footer">
                @if (!string.IsNullOrEmpty(ButtonCancelText))
                {
                    <button type="button" class="btn @ButtonCancelClass" @onclick=@ModalCancel>@ButtonCancelText</button>
                }                
                <button type="button" class="btn @ButtonOKClass" @onclick=@ModalOk>@ButtonOKText</button>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public string? Title { get; set; }

    [Parameter]
    public string? Text { get; set; }

    [Parameter]
    public string ButtonOKText { get; set; } = "OK";
    
    [Parameter]
    public string ButtonOKClass { get; set; } = "btn-primary";

    [Parameter]
    public string ButtonCancelText { get; set; } = "";

    [Parameter]
    public string ButtonCancelClass { get; set; } = "btn-secondary";

    [Parameter]
    public EventCallback<bool> OnClose { get; set; }

    private Task ModalCancel()
    {
        return OnClose.InvokeAsync(false);
    }

    private Task ModalOk()
    {
        return OnClose.InvokeAsync(true);
    }
}
